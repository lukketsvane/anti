{
  "version": 3,
  "sources": ["../../../contentlayer.config.js"],
  "sourcesContent": ["\r\nimport { defineDocumentType, makeSource } from 'contentlayer/source-files';\r\nimport remarkGfm from 'remark-gfm';\r\nimport rehypePrettyCode from 'rehype-pretty-code';\r\nimport rehypeSlug from 'rehype-slug';\r\nimport rehypeAutolinkHeadings from 'rehype-autolink-headings';\r\n\r\nconst computedFields = {\r\n  path: {\r\n    type: 'string',\r\n    resolve: (doc) => `/${doc._raw.flattenedPath}`,\r\n  },\r\n  slug: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.flattenedPath.split('/').slice(1).join('/'),\r\n  },\r\n};\r\n\r\nexport const Project = defineDocumentType(() => ({\r\n  name: 'Project',\r\n  filePathPattern: './projects/**/*.mdx',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string', required: true },\r\n    date: { type: 'date' },\r\n    url: { type: 'string' },\r\n    repository: { type: 'string' },\r\n  },\r\n  computedFields,\r\n}));\r\n\r\nexport const Page = defineDocumentType(() => ({\r\n  name: 'Page',\r\n  filePathPattern: 'pages/**/*.mdx',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    description: { type: 'string' },\r\n  },\r\n  computedFields,\r\n}));\r\nexport const GalleryProject = defineDocumentType(() => ({\r\n\tname: 'GalleryProject',\r\n\tfilePathPattern: './gallery_projects/**/*.mdx',\r\n\tcontentType: 'mdx',\r\n\tfields: {\r\n\t  title: { type: 'string', required: true },\r\n\t  image: { type: 'string', required: true },\r\n\t},\r\n\tcomputedFields,\r\n  }));\r\n  \r\n  export const GalleryImage = defineDocumentType(() => ({\r\n\tname: 'GalleryImage',\r\n\tfilePathPattern: './gallery/**/*.mdx',\r\n\tcontentType: 'mdx',\r\n\tfields: {\r\n\t  title: { type: 'string', required: true },\r\n\t  description: { type: 'string' },\r\n\t  image: { type: 'string', required: true },\r\n\t},\r\n\tcomputedFields,\r\n  }));\r\n  \r\n  export default makeSource({\r\n\tcontentDirPath: './content',\r\n\tdocumentTypes: [Page, Project, GalleryImage, GalleryProject],\r\n\tmdx: {\r\n\t  remarkPlugins: [remarkGfm],\r\n\t  rehypePlugins: [\r\n\t\trehypeSlug,\r\n\t\t[\r\n\t\t  rehypePrettyCode,\r\n\t\t  {\r\n\t\t\ttheme: 'github-dark',\r\n\t\t  },\r\n\t\t],\r\n\t\t[\r\n\t\t  rehypeAutolinkHeadings,\r\n\t\t  {\r\n\t\t\tproperties: {\r\n\t\t\t  className: ['subheading-anchor'],\r\n\t\t\t  ariaLabel: 'Link to section',\r\n\t\t\t},\r\n\t\t  },\r\n\t\t],\r\n\t  ],\r\n\t},\r\n  });"],
  "mappings": ";AACA,SAAS,oBAAoB,kBAAkB;AAC/C,OAAO,eAAe;AACtB,OAAO,sBAAsB;AAC7B,OAAO,gBAAgB;AACvB,OAAO,4BAA4B;AAEnC,IAAM,iBAAiB;AAAA,EACrB,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,IAAI,KAAK;AAAA,EACjC;AAAA,EACA,MAAM;AAAA,IACJ,MAAM;AAAA,IACN,SAAS,CAAC,QAAQ,IAAI,KAAK,cAAc,MAAM,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,GAAG;AAAA,EACvE;AACF;AAEO,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IAC9C,MAAM,EAAE,MAAM,OAAO;AAAA,IACrB,KAAK,EAAE,MAAM,SAAS;AAAA,IACtB,YAAY,EAAE,MAAM,SAAS;AAAA,EAC/B;AAAA,EACA;AACF,EAAE;AAEK,IAAM,OAAO,mBAAmB,OAAO;AAAA,EAC5C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,SAAS;AAAA,EAChC;AAAA,EACA;AACF,EAAE;AACK,IAAM,iBAAiB,mBAAmB,OAAO;AAAA,EACvD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AAAA,EACA;AACC,EAAE;AAEK,IAAM,eAAe,mBAAmB,OAAO;AAAA,EACvD,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,IACxC,aAAa,EAAE,MAAM,SAAS;AAAA,IAC9B,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,EAC1C;AAAA,EACA;AACC,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EAC3B,gBAAgB;AAAA,EAChB,eAAe,CAAC,MAAM,SAAS,cAAc,cAAc;AAAA,EAC3D,KAAK;AAAA,IACH,eAAe,CAAC,SAAS;AAAA,IACzB,eAAe;AAAA,MAChB;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACD,OAAO;AAAA,QACN;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACD,YAAY;AAAA,YACV,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACb;AAAA,QACC;AAAA,MACF;AAAA,IACC;AAAA,EACF;AACC,CAAC;",
  "names": []
}
